<section class="dashboard">
    <h1>My Dashboard</h1>

    <!-- New Post Button -->
    <button id="new-post-btn" class="btn btn-primary">New Post</button>

    <!-- List of Posts -->
    {{#if posts.length}}
    <ul class="post-list">
        {{#each posts}}
        <li>
            <h3>{{this.title}}</h3>
            <button class="edit-btn btn btn-secondary" onclick="window.location.href='/post/edit/{{this.id}}'">Edit</button>
            <button class="delete-btn btn btn-danger" onclick="deletePost({{this.id}})">Delete</button>
        </li>
        {{/each}}
    </ul>
    {{else}}
    <p>No posts yet! Create your first post.</p>
    {{/if}}
</section>

<section id="new-post-form-container" class="hidden">
    <form id="new-post-form">
        <label for="post-title">Title:</label>
        <input type="text" id="post-title" name="post-title" placeholder="Title" required>

        <label for="post-content">Content:</label>
        <textarea id="post-content" name="post-content" placeholder="Write your post here..." required></textarea>

        <button class="create-post-btn btn btn-success" type="submit">Create Post</button>
    </form>
</section>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        const newPostBtn = document.querySelector('#new-post-btn');
        const postFormContainer = document.querySelector('#new-post-form-container');
        
        // Toggle the visibility of the new post form
        newPostBtn.addEventListener('click', () => {
            postFormContainer.classList.toggle('hidden');
            newPostBtn.style.display = 'none';
        });

        // Handle new post submission
        document.querySelector('#new-post-form').addEventListener('submit', async (event) => {
            event.preventDefault();
            const title = document.querySelector('#post-title').value.trim();
            const content = document.querySelector('#post-content').value.trim();

            if (title && content) {
                try {
                    const response = await fetch('/api/posts', {
                        method: 'POST',
                        body: JSON.stringify({ title, content }),
                        headers: {
                            'Content-Type': 'application/json',
                        },
                    });

                    if (response.ok) {
                        document.location.reload();  
                    } else {
                        const errorData = await response.json();
                        alert(`Failed to create post: ${errorData.message}`);
                    }
                } catch (error) {
                    alert('An error occurred while creating the post');
                }
            }
        });

        // Handle post deletion
        window.deletePost = async (id) => {
            try {
                const response = await fetch(`/api/posts/${id}`, {
                    method: 'DELETE',
                });

                if (response.ok) {
                    document.location.reload();  
                } else {
                    const errorData = await response.json();
                    alert(`Failed to delete post: ${errorData.message}`);
                }
            } catch (error) {
                alert('An error occurred while deleting the post');
            }
        };
    });
</script>
